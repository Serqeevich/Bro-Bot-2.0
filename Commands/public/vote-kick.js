const { SlashCommandBuilder, CommandInteraction, EmbedBuilder, } = require("discord.js");
const { PermissionFlagsBits, Colors } = require('discord.js');

module.exports = {
    category: 'public',
    data: new SlashCommandBuilder()
        .setName('vote-kick')
        .setDescription('–°–æ–∑–¥–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –≤–∞—à–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.')
        .addUserOption(option =>
            option
                .setName('—É—á–∞—Å—Ç–Ω–∏–∫')
                .setDescription('–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.')
                .setRequired(true)
        ),
    /**
     * @param {CommandInteraction} interaction 
     */

    async execute(interaction) {

        const { member, options } = interaction;
        const target = options.getMember('—É—á–∞—Å—Ç–Ω–∏–∫');

        if (!target.voice.channel) {
            return interaction.reply({ content: `**–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.**`, ephemeral: true });
        };

        if (target.voice.channel !== member.voice.channel) {
            return interaction.reply({ content: '**–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –æ–¥–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!**', ephemeral: true })
        };

        if (target.permissions.has(PermissionFlagsBits.Administrator) || target.permissions.has(PermissionFlagsBits.ModerateMembers)) {
            return interaction.reply({ content: `**–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –¥–∞–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.**`, ephemeral: true })
        };

        if (member.voice.channel.members.size == 2) {
            return interaction.reply({ content: `**–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–∞–ª–µ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç–æ–ª—å–∫–æ 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞.**`, ephemeral: true })
        };

        const users = member.voice.channel.members.size;
        const channel = member.voice.channel;
        const votesNeed = Math.round((users - 1) * 0.5 + 1);

        let memberMention = "";

        channel.members.each((user) => {
            if (user.id == target.id) {
                return;
            } else {
                memberMention += `<@${user.id}> `
            }
        });

        const message = await interaction.reply({
            content: memberMention,
            embeds: [
                new EmbedBuilder()
                    .setColor(Colors.Yellow)
                    .setThumbnail(target.displayAvatarURL())
                    .setAuthor({
                        name: member.user.username,
                        iconURL: member.user.displayAvatarURL()
                    })
                    .setDescription(
                        `**–Ω–∞—á–∏–Ω–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ <@${target.id}>**\n\n`
                        + `**–í—Ä–µ–º—è –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ:** _1 –º–∏–Ω—É—Ç–∞_\n`
                        + `**–ù—É–∂–Ω–æ –≥–æ–ª–æ—Å–æ–≤**: _${votesNeed}_`
                    )
            ],
            fetchReply: true
        });

        const filterReactions = (reaction, user) => ['üëç'].includes(reaction.emoji.name) && channel.members.map(m => user.id == m.id)  //to do —Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–Ω–∞—Ç—ã
        message.react('üëç');

        message.awaitReactions({ filterReactions, maxUsers: users, time: 1000 * 60 * 1 })
            .then(collected => {
                if (collected.get('üëç').count > votesNeed) {
                    message.reactions.removeAll();

                    try {
                        target.voice.disconnect()
                    } catch { };

                    message.edit({
                        content: ' ',
                        embeds: [
                            new EmbedBuilder()
                                .setColor(Colors.Green)
                                .setThumbnail(target.displayAvatarURL())
                                .setDescription(
                                    `**–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ–∫–æ–Ω—á–µ–Ω–æ - <@${target.id}> –∏—Å–∫–ª—é—á–µ–Ω.**\n\n`
                                    + `**–ï–º—É –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É** ${channel.name}\n\n`
                                    + `**–ù–∞–±—Ä–∞–Ω–æ –≥–æ–ª–æ—Å–æ–≤**: ${(collected.get('üëç').count) - 1}`
                                )
                                .setTimestamp()
                        ]
                    }).then(channel.permissionOverwrites.edit(target, { Connect: false }))
                };

                if (collected.get('üëç').count <= votesNeed) {
                    message.reactions.removeAll()
                    return message.edit({
                        content: ' ',
                        embeds: [
                            new EmbedBuilder()
                                .setColor(Colors.Red)
                                .setThumbnail(target.displayAvatarURL())
                                .setDescription(
                                    `**–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ–∫–æ–Ω—á–µ–Ω–æ - <@${target.id}> –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω**.\n\n`
                                    + `**–ù—É–∂–Ω–æ –≥–æ–ª–æ—Å–æ–≤**: ${votesNeed}\n`
                                    + `**–ù–∞–±—Ä–∞–Ω–æ –≥–æ–ª–æ—Å–æ–≤**: ${(collected.get('üëç').count - 1)}`
                                )
                                .setTimestamp()
                        ]
                    });
                }
            })
    }
}