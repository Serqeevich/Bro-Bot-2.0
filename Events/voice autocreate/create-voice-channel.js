const { VoiceState, EmbedBuilder, ChannelType, PermissionFlagsBits } = require('discord.js');
const { User } = require('../../schemas/pubg-player')
const { TPP_CHANNEL_ID, FPP_CHANNEL_ID, DUO_CHANNEL_ID, RANK_CHANNEL_ID, GAMES_CHANNEL_ID, WAITING_ROOM } = require('../../config.json');
const { TPP_CATEGORY_ID, FPP_CATEGORY_ID, DUO_CATEGORY_ID, RANK_CATEGORY_ID, GAMES_CATEGORY_ID } = require('../../config.json');

//–°–æ–∑–¥–∞–µ–º –±–∞–∑—É –∫—É–ª–¥–∞—É–Ω–æ–≤
const Cooldown = new Map();

module.exports = {
    name: 'voiceStateUpdate',

    /**
     * 
     * @param {VoiceState} oldState 
     * @param {VoiceState} newState 
     */

    async execute(oldState, newState, client) {

        //–Ω–∞—Ö–æ–¥–∏–º –∫–æ–º–Ω–∞—Ç—É –æ–∂–∏–¥–∞–Ω–∏—è
        const waitingRoom = client.channels.cache.get(WAITING_ROOM)

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –∞–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏—è
        if (
            newState.channelId == TPP_CHANNEL_ID || newState.channelId == FPP_CHANNEL_ID ||
            newState.channelId == DUO_CHANNEL_ID || newState.channelId == RANK_CHANNEL_ID ||
            newState.channelId == GAMES_CHANNEL_ID) {

            //–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É–ª–¥–∞—É–Ω
            const cooldown = Cooldown.get(newState.member.id)

            //–µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∫—É–ª–¥–∞—É–Ω ...
            if (cooldown) {

                //–¥–µ–ª–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
                const remaining = ((cooldown - Date.now()) / 1000).toFixed(0)

                //–ø–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–Ω–∞—Ç—É –æ–∂–∏–¥–∞–Ω–∏—è
                newState.setChannel(waitingRoom)

                //–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å—Ç–∞–≤—à–∏–º—Å—è –≤—Ä–µ–º–µ–Ω–µ–º –∫—É–ª–¥–∞—É–Ω–∞
                try {
                    await newState.member.send({
                        embeds: [
                            new EmbedBuilder()
                                .setColor(`#2f3136`)
                                .setDescription(`**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ \` ${remaining} \` —Å–µ–∫—É–Ω–¥ –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª.**`)
                        ]
                    });
                } catch { }  //–û—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç –õ–°

                return;
            };

            if (!newState.member.permissions.has(PermissionFlagsBits.Administrator) || !newState.member.permissions.has(PermissionFlagsBits.ModerateMembers)) {

                //–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∫—É–ª–¥–∞—É–Ω (—Å—Ç—Ä–æ—á–∫–∞ 34) —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å –∫—É–ª–¥–∞—É–Ω–æ–≤
                Cooldown.set(newState.member.id, Date.now() + 1000 * 60)

                //–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä, —á—Ç–æ –±—ã —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É –∫—É–ª–¥–∞—É–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª —É–¥–∞–ª–µ–Ω
                setTimeout(() => { Cooldown.delete(newState.member.id) }, 1000 * 60 * 1);
            };

            //–ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ TPP SQUAD
            if (newState.channel?.id == TPP_CHANNEL_ID) {
                await newState.guild.channels.create({
                    name: `ü•á‚îÇTPP SQUAD`,
                    type: ChannelType.GuildVoice,
                    userLimit: 4,
                    parent: TPP_CATEGORY_ID,
                    position: 0,
                }).then((channel) => { newState.setChannel(channel) });
            };

            //–ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ FPP SQUAD
            if (newState.channel?.id == FPP_CHANNEL_ID) {
                await newState.guild.channels.create({
                    name: `ü•à‚îÇFPP SQUAD`,
                    type: ChannelType.GuildVoice,
                    userLimit: 4,
                    parent: FPP_CATEGORY_ID,
                    position: 0,
                }).then((channel) => { newState.setChannel(channel) });
            };

            //–ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ Duo
            if (newState.channel?.id == DUO_CHANNEL_ID) {
                await newState.guild.channels.create({
                    name: `ü•à‚îÇDuo`,
                    type: ChannelType.GuildVoice,
                    userLimit: 2,
                    parent: DUO_CATEGORY_ID,
                    position: 0,
                }).then((channel) => { newState.setChannel(channel) });
            }
            //–ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ Ranked
            if (newState.channel?.id == RANK_CHANNEL_ID) {
                const data = await User.findOne({ discordId: newState.member.id });
                const tier = data?.stats?.currentTierFpp;
                const subTier = data?.stats?.currentSubTierFpp;
                const name = `üèÖ‚îÇ${tier ? tier : 'unranked'} ` + `${subTier ? subTier : ' '}`
                await newState.guild.channels.create({
                    name: name,
                    type: ChannelType.GuildVoice,
                    userLimit: 4,
                    parent: RANK_CATEGORY_ID,
                }).then((channel) => { newState.setChannel(channel) })
            };

            //–ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä
            if (newState.channel?.id == GAMES_CHANNEL_ID) {
                const userName = newState.member.user.username;
                let userPresense = newState.member.presence?.activities[0]?.name;
                if (userPresense == 'Custom Status') {
                    userPresense = userName;
                };
                await newState.guild.channels.create({
                    name: `üé≤Ô∏∞${userPresense || userName}`,
                    type: ChannelType.GuildVoice,
                    userLimit: 99,
                    parent: GAMES_CATEGORY_ID,
                }).then((channel) => { newState.setChannel(channel) }) //.then(channel.permissionOverwrites.edit(newState.member, { ManageChannels: true })) });
            }

            //—É–¥–∞–ª—è—Ç—å –∫–∞–Ω–∞–ª—ã –º—ã –±—É–¥–µ–º –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—Å–ª–∏ –¥–µ–ª–∞—Ç—å —ç—Ç–æ –∑–¥–µ—Å—å –ø—Ä–∏–π–¥–µ—Ç—Å—è –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å —ç—Ç–æ –≤ 2-—Ö –º–µ—Å—Ç–∞—Ö...
        }
    },
};